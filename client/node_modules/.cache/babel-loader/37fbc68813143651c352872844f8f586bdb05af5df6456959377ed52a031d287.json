{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\priya\\\\Downloads\\\\Desai-Full-Project\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from './api';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Appointment from './components/Appointment';\nimport Login from './components/Login';\nimport AdminDashboard from './components/AdminDashboard';\nimport PatientDashboard from './components/PatientDashboard';\nimport ServiceModal from './components/ServiceModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [activePage, setActivePage] = useState('home');\n  const [user, setUser] = useState(null); // {name, role, email}\n\n  const [patients, setPatients] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  const [treatments, setTreatments] = useState([]);\n  const [medicines, setMedicines] = useState([]);\n  const isAdmin = (user === null || user === void 0 ? void 0 : user.role) === 'admin';\n  const loadAdminData = async () => {\n    if (!isAdmin) return;\n    try {\n      const [p, a, t, m] = await Promise.all([api.get('/patients'), api.get('/appointments'), api.get('/treatments'), api.get('/medicines')]);\n      setPatients(p.data);\n      setAppointments(a.data);\n      setTreatments(t.data);\n      setMedicines(m.data);\n    } catch (e) {\n      console.error('Failed to load admin data', e);\n    }\n  };\n  useEffect(() => {\n    loadAdminData();\n  }, [isAdmin]);\n  const handleLogin = async (email, password) => {\n    try {\n      const {\n        data\n      } = await api.post('/auth/login', {\n        email,\n        password\n      });\n      localStorage.setItem('token', data.token);\n      setUser(data.user);\n      setActivePage(data.user.role === 'admin' ? 'admin' : 'patient');\n    } catch (e) {\n      alert('Invalid credentials');\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setActivePage('home');\n  };\n  const createAppointment = async payload => {\n    const {\n      data\n    } = await api.post('/appointments', payload);\n    alert('Appointment booked!');\n    if (isAdmin) setAppointments([data, ...appointments]);\n  };\n  const addPatient = async payload => {\n    const {\n      data\n    } = await api.post('/patients', payload);\n    setPatients([data, ...patients]);\n  };\n  const addTreatment = async payload => {\n    const {\n      data\n    } = await api.post('/treatments', payload);\n    setTreatments([data, ...treatments]);\n  };\n  const addMedicine = async payload => {\n    const {\n      data\n    } = await api.post('/medicines', payload);\n    setMedicines([data, ...medicines]);\n  };\n  const updateAppointmentStatus = async (id, status) => {\n    const {\n      data\n    } = await api.patch(`/appointments/${id}/status`, {\n      status\n    });\n    setAppointments(appointments.map(a => a._id === id ? data : a));\n  };\n  const updateMedicineStock = async (id, stock) => {\n    const {\n      data\n    } = await api.patch(`/medicines/${id}/stock`, {\n      stock\n    });\n    setMedicines(medicines.map(m => m._id === id ? data : m));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      activePage: activePage,\n      setActivePage: setActivePage,\n      user: user,\n      logout: logout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container\",\n      children: [activePage === 'home' && /*#__PURE__*/_jsxDEV(Home, {\n        setActivePage: setActivePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 35\n      }, this), activePage === 'appointment' && /*#__PURE__*/_jsxDEV(Appointment, {\n        onCreate: createAppointment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 42\n      }, this), activePage === 'login' && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 36\n      }, this), activePage === 'admin' && isAdmin && /*#__PURE__*/_jsxDEV(AdminDashboard, {\n        patients: patients,\n        appointments: appointments,\n        treatments: treatments,\n        medicines: medicines,\n        addPatient: addPatient,\n        addTreatment: addTreatment,\n        addMedicine: addMedicine,\n        updateAppointmentStatus: updateAppointmentStatus,\n        updateMedicineStock: updateMedicineStock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), activePage === 'patient' && (user === null || user === void 0 ? void 0 : user.role) === 'patient' && /*#__PURE__*/_jsxDEV(PatientDashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ServiceModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uG531vHV1vFOqoUo/yAsEUJm8J8=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","api","Header","Home","Appointment","Login","AdminDashboard","PatientDashboard","ServiceModal","jsxDEV","_jsxDEV","App","_s","activePage","setActivePage","user","setUser","patients","setPatients","appointments","setAppointments","treatments","setTreatments","medicines","setMedicines","isAdmin","role","loadAdminData","p","a","t","m","Promise","all","get","data","e","console","error","handleLogin","email","password","post","localStorage","setItem","token","alert","logout","removeItem","createAppointment","payload","addPatient","addTreatment","addMedicine","updateAppointmentStatus","id","status","patch","map","_id","updateMedicineStock","stock","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onCreate","onLogin","_c","$RefreshReg$"],"sources":["C:/Users/priya/Downloads/Desai-Full-Project/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from './api';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Appointment from './components/Appointment';\nimport Login from './components/Login';\nimport AdminDashboard from './components/AdminDashboard';\nimport PatientDashboard from './components/PatientDashboard';\nimport ServiceModal from './components/ServiceModal';\n\nexport default function App() {\n  const [activePage, setActivePage] = useState('home');\n  const [user, setUser] = useState(null); // {name, role, email}\n\n  const [patients, setPatients] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  const [treatments, setTreatments] = useState([]);\n  const [medicines, setMedicines] = useState([]);\n\n  const isAdmin = user?.role === 'admin';\n\n  const loadAdminData = async () => {\n    if (!isAdmin) return;\n    try {\n      const [p, a, t, m] = await Promise.all([\n        api.get('/patients'),\n        api.get('/appointments'),\n        api.get('/treatments'),\n        api.get('/medicines')\n      ]);\n      setPatients(p.data); setAppointments(a.data); setTreatments(t.data); setMedicines(m.data);\n    } catch (e) {\n      console.error('Failed to load admin data', e);\n    }\n  };\n\n  useEffect(() => { loadAdminData(); }, [isAdmin]);\n\n  const handleLogin = async (email, password) => {\n    try {\n      const { data } = await api.post('/auth/login', { email, password });\n      localStorage.setItem('token', data.token);\n      setUser(data.user);\n      setActivePage(data.user.role === 'admin' ? 'admin' : 'patient');\n    } catch (e) {\n      alert('Invalid credentials');\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setActivePage('home');\n  };\n\n  const createAppointment = async (payload) => {\n    const { data } = await api.post('/appointments', payload);\n    alert('Appointment booked!');\n    if (isAdmin) setAppointments([data, ...appointments]);\n  };\n\n  const addPatient = async (payload) => {\n    const { data } = await api.post('/patients', payload);\n    setPatients([data, ...patients]);\n  };\n\n  const addTreatment = async (payload) => {\n    const { data } = await api.post('/treatments', payload);\n    setTreatments([data, ...treatments]);\n  };\n\n  const addMedicine = async (payload) => {\n    const { data } = await api.post('/medicines', payload);\n    setMedicines([data, ...medicines]);\n  };\n\n  const updateAppointmentStatus = async (id, status) => {\n    const { data } = await api.patch(`/appointments/${id}/status`, { status });\n    setAppointments(appointments.map(a => a._id === id ? data : a));\n  };\n\n  const updateMedicineStock = async (id, stock) => {\n    const { data } = await api.patch(`/medicines/${id}/stock`, { stock });\n    setMedicines(medicines.map(m => m._id === id ? data : m));\n  };\n\n  return (\n    <div>\n      <Header activePage={activePage} setActivePage={setActivePage} user={user} logout={logout} />\n\n      <main className=\"container\">\n        {activePage === 'home' && <Home setActivePage={setActivePage} />}\n        {activePage === 'appointment' && <Appointment onCreate={createAppointment} />}\n        {activePage === 'login' && <Login onLogin={handleLogin} />}\n        {activePage === 'admin' && isAdmin && (\n          <AdminDashboard\n            patients={patients}\n            appointments={appointments}\n            treatments={treatments}\n            medicines={medicines}\n            addPatient={addPatient}\n            addTreatment={addTreatment}\n            addMedicine={addMedicine}\n            updateAppointmentStatus={updateAppointmentStatus}\n            updateMedicineStock={updateMedicineStock}\n          />\n        )}\n        {activePage === 'patient' && user?.role === 'patient' && (\n          <PatientDashboard />\n        )}\n      </main>\n\n      <ServiceModal />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}